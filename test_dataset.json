[{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments n"},{"role":"user","content":"Write a function to calculate the sum of perrin numbers."},{"role":"assistant","content":"def cal_sum(n): \n\ta = 3\n\tb = 0\n\tc = 2\n\tif (n == 0): \n\t\treturn 3\n\tif (n == 1): \n\t\treturn 3\n\tif (n == 2): \n\t\treturn 5\n\tsum = 5\n\twhile (n > 2): \n\t\td = a + b \n\t\tsum = sum + d \n\t\ta = b \n\t\tb = c \n\t\tc = d \n\t\tn = n-1\n\treturn sum"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments lst"},{"role":"user","content":"Write a python function to find the element of a list having maximum length."},{"role":"assistant","content":"def Find_Max(lst): \n    maxList = max((x) for x in lst) \n    return maxList"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments test_tuple"},{"role":"user","content":"Write a function to extract only the rear index element of each string in the given tuple."},{"role":"assistant","content":"def extract_rear(test_tuple):\n  res = list(sub[len(sub) - 1] for sub in test_tuple)\n  return (res) "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments a, b"},{"role":"user","content":"Write a function to find perfect squares between two given numbers."},{"role":"assistant","content":"def perfect_squares(a, b):\n    lists=[]\n    for i in range (a,b+1):\n        j = 1;\n        while j*j <= i:\n            if j*j == i:\n                 lists.append(i)  \n            j = j+1\n        i = i+1\n    return lists"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nNone"},{"role":"user","content":"Write a python function to find the sum of fourth power of first n odd natural numbers."},{"role":"assistant","content":"def odd_num_sum(n) : \n    j = 0\n    sm = 0\n    for i in range(1,n + 1) : \n        j = (2*i-1) \n        sm = sm + (j*j*j*j)   \n    return sm "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments dict, n"},{"role":"user","content":"Write a function to check if all values are same in a dictionary."},{"role":"assistant","content":"def check_value(dict, n):\n    result = all(x == n for x in dict.values()) \n    return result"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments text"},{"role":"user","content":"Write a function to remove all whitespaces from a string."},{"role":"assistant","content":"import re\ndef remove_all_spaces(text):\n return (re.sub(r'\\s+', '',text))"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments exp"},{"role":"user","content":"Write a function to check if the given expression is balanced or not. https:\/\/www.geeksforgeeks.org\/check-for-balanced-parentheses-in-an-expression\/"},{"role":"assistant","content":"from collections import deque\ndef check_expression(exp):\n    if len(exp) & 1:\n        return False\n    stack = deque()\n    for ch in exp:\n        if ch == '(' or ch == '{' or ch == '[':\n            stack.append(ch)\n        if ch == ')' or ch == '}' or ch == ']':\n            if not stack:\n                return False\n            top = stack.pop()\n            if (top == '(' and ch != ')') or (top == '{' and ch != '}' or (top == '[' and ch != ']')):\n                return False\n    return not stack"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments arr1, arr2, k"},{"role":"user","content":"Write a function to find kth element from the given two sorted arrays."},{"role":"assistant","content":"def find_kth(arr1, arr2, k):\n\tm = len(arr1)\n\tn = len(arr2)\n\tsorted1 = [0] * (m + n)\n\ti = 0\n\tj = 0\n\td = 0\n\twhile (i < m and j < n):\n\t\tif (arr1[i] < arr2[j]):\n\t\t\tsorted1[d] = arr1[i]\n\t\t\ti += 1\n\t\telse:\n\t\t\tsorted1[d] = arr2[j]\n\t\t\tj += 1\n\t\td += 1\n\twhile (i < m):\n\t\tsorted1[d] = arr1[i]\n\t\td += 1\n\t\ti += 1\n\twhile (j < n):\n\t\tsorted1[d] = arr2[j]\n\t\td += 1\n\t\tj += 1\n\treturn sorted1[k - 1]"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments a, size"},{"role":"user","content":"Write a function to find the sum of the largest contiguous sublist in the given list."},{"role":"assistant","content":"def max_sub_array_sum(a, size):\n  max_so_far = 0\n  max_ending_here = 0\n  for i in range(0, size):\n    max_ending_here = max_ending_here + a[i]\n    if max_ending_here < 0:\n      max_ending_here = 0\n    elif (max_so_far < max_ending_here):\n      max_so_far = max_ending_here\n  return max_so_far"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments word"},{"role":"user","content":"Write a function to convert the given snake case string to camel case string."},{"role":"assistant","content":"import re\ndef snake_to_camel(word):\n  return ''.join(x.capitalize() or '_' for x in word.split('_'))"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments n, k"},{"role":"user","content":"Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors."},{"role":"assistant","content":"def count_no_of_ways(n, k): \n\tdp = [0] * (n + 1) \n\ttotal = k \n\tmod = 1000000007\n\tdp[1] = k \n\tdp[2] = k * k\t \n\tfor i in range(3,n+1): \n\t\tdp[i] = ((k - 1) * (dp[i - 1] + dp[i - 2])) % mod \n\treturn dp[n]"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments N"},{"role":"user","content":"Write a function to find the closest smaller number than n."},{"role":"assistant","content":"def closest_num(N):\n  return (N - 1)"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments test_tup1, test_tup2"},{"role":"user","content":"Write a function to extract the elementwise and tuples from the given two tuples."},{"role":"assistant","content":"def and_tuples(test_tup1, test_tup2):\n  res = tuple(ele1 & ele2 for ele1, ele2 in zip(test_tup1, test_tup2))\n  return (res) "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments nums"},{"role":"user","content":"Write a function to compute the sum of digits of each number of a given list."},{"role":"assistant","content":"def sum_of_digits(nums):\n    return sum(int(el) for n in nums for el in str(n) if el.isdigit())"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments s"},{"role":"user","content":"Write a function to reverse words seperated by spaces in a given string."},{"role":"assistant","content":"def reverse_words(s):\n        return ' '.join(reversed(s.split()))"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments dict1"},{"role":"user","content":"Write a function to sort a dictionary by value."},{"role":"assistant","content":"from collections import Counter\ndef sort_counter(dict1):\n x = Counter(dict1)\n sort_counter=x.most_common()\n return sort_counter"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments n"},{"role":"user","content":"Write a python function to count the number of set bits (binary digits with value 1) in a given number."},{"role":"assistant","content":"def count_Set_Bits(n): \n    count = 0\n    while (n): \n        count += n & 1\n        n >>= 1\n    return count "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments n"},{"role":"user","content":"Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros."},{"role":"assistant","content":"def decimal_to_binary(n): \n    return bin(n).replace(\"0b\",\"\") "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments n"},{"role":"user","content":"Write a python function to identify non-prime numbers."},{"role":"assistant","content":"import math\ndef is_not_prime(n):\n    result = False\n    for i in range(2,int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            result = True\n    return result"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments text"},{"role":"user","content":"Write a function that matches a string that has an 'a' followed by anything, ending in 'b'."},{"role":"assistant","content":"import re\ndef text_starta_endb(text):\n        patterns = 'a.*?b$'\n        return re.search(patterns,  text)"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments lst"},{"role":"user","content":"Write a python function to find the length of the smallest list in a list of lists."},{"role":"assistant","content":"def Find_Min_Length(lst):  \n    minLength = min(len(x) for x in lst )\n    return minLength "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments tup1"},{"role":"user","content":"Write a function to convert a tuple to a string."},{"role":"assistant","content":"def tup_string(tup1):\n  str =  ''.join(tup1)\n  return str"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments arr"},{"role":"user","content":"Write a python function to find a pair with highest product from a given array of integers."},{"role":"assistant","content":"def max_Product(arr): \n    arr_len = len(arr) \n    if (arr_len < 2): \n        return (\"No pairs exists\")           \n    x = arr[0]; y = arr[1]      \n    for i in range(0,arr_len): \n        for j in range(i + 1,arr_len): \n            if (arr[i] * arr[j] > x * y): \n                x = arr[i]; y = arr[j] \n    return x,y    "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments s"},{"role":"user","content":"Write a python function to check whether the length of the word is odd or not."},{"role":"assistant","content":"def word_len(s): \n    s = s.split(' ')   \n    for word in s:    \n        if len(word)%2!=0: \n            return True  \n        else:\n          return False"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nNone"},{"role":"user","content":"Write a python function to find the first digit of a given number."},{"role":"assistant","content":"def first_Digit(n) :  \n    while n >= 10:  \n        n = n \/ 10 \n    return int(n) "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments test_tup"},{"role":"user","content":"Write a function to check if the given tuple has any none value or not."},{"role":"assistant","content":"def check_none(test_tup):\n  res = any(map(lambda ele: ele is None, test_tup))\n  return res "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments a, b, n"},{"role":"user","content":"Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists."},{"role":"assistant","content":"def find_solution(a, b, n):\n\ti = 0\n\twhile i * a <= n:\n\t\tif (n - (i * a)) % b == 0: \n\t\t\treturn (i, (n - (i * a)) \/\/ b)\n\t\ti = i + 1\n\treturn None"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments sample_names"},{"role":"user","content":"Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter."},{"role":"assistant","content":"def sample_nam(sample_names):\n  sample_names=list(filter(lambda el:el[0].isupper() and el[1:].islower(),sample_names))\n  return len(''.join(sample_names))"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments numbers"},{"role":"user","content":"Write a function to multiply all the numbers in a list and divide with the length of the list."},{"role":"assistant","content":"def multiply_num(numbers):  \n    total = 1\n    for x in numbers:\n        total *= x  \n    return total\/len(numbers) "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments cost"},{"role":"user","content":"Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path."},{"role":"assistant","content":"def maxAverageOfPath(cost):\n  N = len(cost)\n  dp = [[0 for i in range(N + 1)] for j in range(N + 1)]\n  dp[0][0] = cost[0][0]\n  for i in range(1, N):\n    dp[i][0] = dp[i - 1][0] + cost[i][0]\n  for j in range(1, N):\n    dp[0][j] = dp[0][j - 1] + cost[0][j]\n  for i in range(1, N):\n    for j in range(1, N):\n      dp[i][j] = max(dp[i - 1][j],\n                     dp[i][j - 1]) + cost[i][j]\n  return dp[N - 1][N - 1] \/ (2 * N - 1)"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments list"},{"role":"user","content":"Write a python function which takes a list of integers and only returns the odd ones."},{"role":"assistant","content":"def Split(list): \n    od_li = [] \n    for i in list: \n        if (i % 2 != 0): \n            od_li.append(i)  \n    return od_li"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments text"},{"role":"user","content":"Write a function that matches a word containing 'z'."},{"role":"assistant","content":"import re\ndef text_match_wordz(text):\n        patterns = '\\w*z.\\w*'\n        if re.search(patterns,  text):\n                return True\n        else:\n                return False"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments arraynums"},{"role":"user","content":"Write a function to find whether a given array of integers contains any duplicate element."},{"role":"assistant","content":"def test_duplicate(arraynums):\n    nums_set = set(arraynums)    \n    return len(arraynums) != len(nums_set)     "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments test_list, N"},{"role":"user","content":"Write a function which given a matrix represented as a list of lists returns the max of the n'th column."},{"role":"assistant","content":"def max_of_nth(test_list, N):\n  res = max([sub[N] for sub in test_list])\n  return (res) "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments list1,list2,list3"},{"role":"user","content":"Write a function to count number items that are identical in the same position of three given lists."},{"role":"assistant","content":"def count_samepair(list1,list2,list3):\n    result = sum(m == n == o for m, n, o in zip(list1,list2,list3))\n    return result"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments arr,n"},{"role":"user","content":"Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal."},{"role":"assistant","content":"def count_Pairs(arr,n): \n    cnt = 0; \n    for i in range(n): \n        for j in range(i + 1,n): \n            if (arr[i] != arr[j]): \n                cnt += 1; \n    return cnt; "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments arr"},{"role":"user","content":"Write a python function to count inversions in an array."},{"role":"assistant","content":"def get_Inv_Count(arr): \n    inv_count = 0\n    for i in range(len(arr)): \n        for j in range(i + 1, len(arr)): \n            if (arr[i] > arr[j]): \n                inv_count += 1\n    return inv_count "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nNone"},{"role":"user","content":"Write a python function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius."},{"role":"assistant","content":"def triangle_area(r) :  \n    if r < 0 : \n        return None\n    return r * r "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nNone"},{"role":"user","content":"Write a function to check whether the given number is a perfect square or not. https:\/\/www.geeksforgeeks.org\/check-if-given-number-is-perfect-square-in-cpp\/"},{"role":"assistant","content":"def is_perfect_square(n) :\n    i = 1\n    while (i * i<= n):\n        if ((n % i == 0) and (n \/ i == i)):\n            return True     \n        i = i + 1\n    return False"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments n"},{"role":"user","content":"Write a function to find the nth newman\u2013shanks\u2013williams prime number."},{"role":"assistant","content":"def newman_prime(n): \n\tif n == 0 or n == 1: \n\t\treturn 1\n\treturn 2 * newman_prime(n - 1) + newman_prime(n - 2)"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nNone"},{"role":"user","content":"Write a python function to check whether the given number is even or not."},{"role":"assistant","content":"def is_Even(n) : \n    if (n^1 == n+1) :\n        return True; \n    else :\n        return False; "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments input_list"},{"role":"user","content":"Write a python function to count the number of lists in a given number of lists."},{"role":"assistant","content":"def count_list(input_list): \n    return len(input_list)"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments test_tup1, test_tup2"},{"role":"user","content":"Write a function which takes two tuples of the same length and performs the element wise modulo."},{"role":"assistant","content":"def tuple_modulo(test_tup1, test_tup2):\n  res = tuple(ele1 % ele2 for ele1, ele2 in zip(test_tup1, test_tup2)) \n  return (res) "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments stringlist"},{"role":"user","content":"Write a function to reverse each string in a given list of string values."},{"role":"assistant","content":"def reverse_string_list(stringlist):\n    result = [x[::-1] for x in stringlist]\n    return result"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments num"},{"role":"user","content":"Write a function to find the next smallest palindrome of a specified integer, returned as an integer."},{"role":"assistant","content":"import sys\ndef next_smallest_palindrome(num):\n    numstr = str(num)\n    for i in range(num+1,sys.maxsize):\n        if str(i) == str(i)[::-1]:\n            return i"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nNone"},{"role":"user","content":"Write a python function to check whether all the characters are same or not."},{"role":"assistant","content":"def all_Characters_Same(s) :\n    n = len(s)\n    for i in range(1,n) :\n        if s[i] != s[0] :\n            return False\n    return True"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments n"},{"role":"user","content":"Write a python function to find the number of divisors of a given integer."},{"role":"assistant","content":"def divisor(n):\n  for i in range(n):\n    x = len([i for i in range(1,n+1) if not n % i])\n  return x"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments tuplex,m,n"},{"role":"user","content":"Write a function to get a colon of a tuple."},{"role":"assistant","content":"from copy import deepcopy\ndef colon_tuplex(tuplex,m,n):\n  tuplex_colon = deepcopy(tuplex)\n  tuplex_colon[m].append(n)\n  return tuplex_colon"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments a,b,c"},{"role":"user","content":"Write a function to find the median of three numbers."},{"role":"assistant","content":"def median_numbers(a,b,c):\n if a > b:\n    if a < c:\n        median = a\n    elif b > c:\n        median = b\n    else:\n        median = c\n else:\n    if a > c:\n        median = a\n    elif b < c:\n        median = b\n    else:\n        median = c\n return median"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments nums"},{"role":"user","content":"Write a python function to find the first odd number in a given list of numbers."},{"role":"assistant","content":"def first_odd(nums):\n  first_odd = next((el for el in nums if el%2!=0),-1)\n  return first_odd"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments str1"},{"role":"user","content":"Write a python function to find the first non-repeated character in a given string."},{"role":"assistant","content":"def first_non_repeating_character(str1):\n  char_order = []\n  ctr = {}\n  for c in str1:\n    if c in ctr:\n      ctr[c] += 1\n    else:\n      ctr[c] = 1 \n      char_order.append(c)\n  for c in char_order:\n    if ctr[c] == 1:\n      return c\n  return None"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments n"},{"role":"user","content":"Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits."},{"role":"assistant","content":"def count_binary_seq(n): \n\tnCr = 1\n\tres = 1\n\tfor r in range(1, n + 1): \n\t\tnCr = (nCr * (n + 1 - r)) \/ r \n\t\tres += nCr * nCr \n\treturn res "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments input_list"},{"role":"user","content":"Write a function to sort each sublist of strings in a given list of lists."},{"role":"assistant","content":"def sort_sublists(input_list):\n    result = [sorted(x, key = lambda x:x[0]) for x in input_list] \n    return result\n"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments test_list"},{"role":"user","content":"Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value."},{"role":"assistant","content":"from operator import itemgetter \ndef index_minimum(test_list):\n  res = min(test_list, key = itemgetter(1))[0]\n  return (res) "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments test_tup, test_dict"},{"role":"user","content":"Write a function to add a dictionary to the tuple. The output should be a tuple."},{"role":"assistant","content":"def add_dict_to_tuple(test_tup, test_dict):\n  test_tup = list(test_tup)\n  test_tup.append(test_dict)\n  test_tup = tuple(test_tup)\n  return (test_tup) "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments nums"},{"role":"user","content":"Write a function to find cubes of individual elements in a list."},{"role":"assistant","content":"def cube_nums(nums):\n cube_nums = list(map(lambda x: x ** 3, nums))\n return cube_nums"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments dict1"},{"role":"user","content":"Write a function to drop empty items from a given dictionary."},{"role":"assistant","content":"def drop_empty(dict1):\n  dict1 = {key:value for (key, value) in dict1.items() if value is not None}\n  return dict1"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments test_list"},{"role":"user","content":"Write a function to find the maximum difference between available pairs in the given tuple list."},{"role":"assistant","content":"def max_difference(test_list):\n  temp = [abs(b - a) for a, b in test_list]\n  res = max(temp)\n  return (res) "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments n"},{"role":"user","content":"Write a python function to find nth bell number."},{"role":"assistant","content":"def bell_Number(n): \n    bell = [[0 for i in range(n+1)] for j in range(n+1)] \n    bell[0][0] = 1\n    for i in range(1, n+1):\n        bell[i][0] = bell[i-1][i-1]\n        for j in range(1, i+1): \n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1] \n    return bell[n][0] "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments list1"},{"role":"user","content":"Write a function to find the list of maximum length in a list of lists."},{"role":"assistant","content":"def max_length(list1):\n    max_length = max(len(x) for x in  list1 )  \n    max_list = max((x) for x in   list1)\n    return(max_length, max_list)"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments list1"},{"role":"user","content":"Write a function to check whether a specified list is sorted or not."},{"role":"assistant","content":"def issort_list(list1):\n    result = all(list1[i] <= list1[i+1] for i in range(len(list1)-1))\n    return result"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments test_tup1, test_tup2"},{"role":"user","content":"Write a function to perform the mathematical bitwise xor operation across the given tuples."},{"role":"assistant","content":"def bitwise_xor(test_tup1, test_tup2):\n  res = tuple(ele1 ^ ele2 for ele1, ele2 in zip(test_tup1, test_tup2))\n  return (res) "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments str"},{"role":"user","content":"Write a python function to count number of digits in a given string."},{"role":"assistant","content":"def number_ctr(str):\n      number_ctr= 0\n      for i in range(len(str)):\n          if str[i] >= '0' and str[i] <= '9': number_ctr += 1     \n      return  number_ctr"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments listx"},{"role":"user","content":"Write a function to convert a list to a tuple."},{"role":"assistant","content":"def list_tuple(listx):\n  tuplex = tuple(listx)\n  return tuplex"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments input, k"},{"role":"user","content":"Write a python function to reverse an array upto a given position."},{"role":"assistant","content":"def reverse_Array_Upto_K(input, k): \n  return (input[k-1::-1] + input[k:]) "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments test_list1, test_list2"},{"role":"user","content":"Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order."},{"role":"assistant","content":"def tuple_intersection(test_list1, test_list2):\n  res = set([tuple(sorted(ele)) for ele in test_list1]) & set([tuple(sorted(ele)) for ele in test_list2])\n  return (res)"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments n"},{"role":"user","content":"Write a function to get all lucid numbers smaller than or equal to a given integer."},{"role":"assistant","content":"def get_ludic(n):\n\tludics = []\n\tfor i in range(1, n + 1):\n\t\tludics.append(i)\n\tindex = 1\n\twhile(index != len(ludics)):\n\t\tfirst_ludic = ludics[index]\n\t\tremove_index = index + first_ludic\n\t\twhile(remove_index < len(ludics)):\n\t\t\tludics.remove(ludics[remove_index])\n\t\t\tremove_index = remove_index + first_ludic - 1\n\t\tindex += 1\n\treturn ludics"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments dict,n"},{"role":"user","content":"Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n."},{"role":"assistant","content":"def dict_filter(dict,n):\n result = {key:value for (key, value) in dict.items() if value >=n}\n return result"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments l, n"},{"role":"user","content":"Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination."},{"role":"assistant","content":"from itertools import combinations_with_replacement \ndef combinations_colors(l, n):\n    return list(combinations_with_replacement(l,n))\n"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments n"},{"role":"user","content":"Write a function to find the nth decagonal number."},{"role":"assistant","content":"def is_num_decagonal(n): \n\treturn 4 * n * n - 3 * n "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments string"},{"role":"user","content":"Write a function to check whether the given string is starting with a vowel or not using regex."},{"role":"assistant","content":"import re \nregex = '^[aeiouAEIOU][A-Za-z0-9_]*'\ndef check_str(string): \n\treturn re.search(regex, string)"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments a,x"},{"role":"user","content":"Write a function to count the number of occurrences of a number in a given list."},{"role":"assistant","content":"def frequency(a,x): \n    count = 0  \n    for i in a: \n      if i == x: \n        count += 1\n\n    return count "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments test_list, test_tup"},{"role":"user","content":"Write a function to add the given tuple to the given list."},{"role":"assistant","content":"def add_tuple(test_list, test_tup):\n  test_list += test_tup\n  return test_list"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments nums"},{"role":"user","content":"Write a function to sort a list of elements."},{"role":"assistant","content":"def pancake_sort(nums):\n    arr_len = len(nums)\n    while arr_len > 1:\n        mi = nums.index(max(nums[0:arr_len]))\n        nums = nums[mi::-1] + nums[mi+1:len(nums)]\n        nums = nums[arr_len-1::-1] + nums[arr_len:len(nums)]\n        arr_len -= 1\n    return nums"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments string"},{"role":"user","content":"Write a function to replace all spaces in the given string with '%20'."},{"role":"assistant","content":"def replace_spaces(string):\n  return string.replace(\" \", \"%20\")"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments nums"},{"role":"user","content":"Write a function to filter odd numbers."},{"role":"assistant","content":"def filter_oddnumbers(nums):\n odd_nums = list(filter(lambda x: x%2 != 0, nums))\n return odd_nums"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments arr"},{"role":"user","content":"Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing."},{"role":"assistant","content":"def max_sum(arr): \n\tMSIBS = arr[:] \n\tfor i in range(len(arr)): \n\t\tfor j in range(0, i): \n\t\t\tif arr[i] > arr[j] and MSIBS[i] < MSIBS[j] + arr[i]: \n\t\t\t\tMSIBS[i] = MSIBS[j] + arr[i] \n\tMSDBS = arr[:] \n\tfor i in range(1, len(arr) + 1): \n\t\tfor j in range(1, i): \n\t\t\tif arr[-i] > arr[-j] and MSDBS[-i] < MSDBS[-j] + arr[-i]: \n\t\t\t\tMSDBS[-i] = MSDBS[-j] + arr[-i] \n\tmax_sum = float(\"-Inf\") \n\tfor i, j, k in zip(MSIBS, MSDBS, arr): \n\t\tmax_sum = max(max_sum, i + j - k) \n\treturn max_sum"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments test_tup1, test_tup2"},{"role":"user","content":"Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple."},{"role":"assistant","content":"def check_smaller(test_tup1, test_tup2):\n  return all(x > y for x, y in zip(test_tup1, test_tup2))"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments xs"},{"role":"user","content":"Write a python function to find smallest number in a list."},{"role":"assistant","content":"def smallest_num(xs):\n  return min(xs)\n"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments string"},{"role":"user","content":"Write a function to check whether the given string starts and ends with the same character or not."},{"role":"assistant","content":"import re  \nregex = r'^[a-z]$|^([a-z]).*\\1$'\ndef check_char(string): \n\tif(re.search(regex, string)): \n\t\treturn \"Valid\" \n\telse: \n\t\treturn \"Invalid\" "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments limit"},{"role":"user","content":"Write a function to sum all amicable numbers from 1 to a specified number."},{"role":"assistant","content":"def amicable_numbers_sum(limit):\n    if not isinstance(limit, int):\n        return \"Input is not an integer!\"\n    if limit < 1:\n        return \"Input must be bigger than 0!\"\n    amicables = set()\n    for num in range(2, limit+1):\n        if num in amicables:\n            continue\n        sum_fact = sum([fact for fact in range(1, num) if num % fact == 0])\n        sum_fact2 = sum([fact for fact in range(1, sum_fact) if sum_fact % fact == 0])\n        if num == sum_fact2 and num != sum_fact:\n            amicables.add(num)\n            amicables.add(sum_fact2)\n    return sum(amicables)"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments str"},{"role":"user","content":"Write a python function to remove the characters which have odd index values of a given string."},{"role":"assistant","content":"def odd_values_string(str):\n  result = \"\" \n  for i in range(len(str)):\n    if i % 2 == 0:\n      result = result + str[i]\n  return result"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments test_tup1, test_tup2"},{"role":"user","content":"Write a function to find the union of the elements of two given tuples and output them in sorted order."},{"role":"assistant","content":"def union_elements(test_tup1, test_tup2):\n  res = tuple(set(test_tup1 + test_tup2))\n  return (res) "}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments base, power"},{"role":"user","content":"Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power."},{"role":"assistant","content":"def power_base_sum(base, power):\n    return sum([int(i) for i in str(pow(base, power))])"}]},{"messages":[{"role":"system","content":"You are an text to PYTHON function translator. Users will ask you questions in English and you will generate a PYTHON function based on the provided CONTEXT.\nCONTEXT:\nGiven function arguments s"},{"role":"user","content":"Write a function to count the number of occurence of the string 'std' in a given string."},{"role":"assistant","content":"def count_occurance(s):\n  count = 0\n  for i in range(len(s) - 2):\n    if (s[i] == 's' and s[i+1] == 't' and s[i+2] == 'd'):\n      count = count + 1\n  return count"}]}]